apply plugin: 'jacoco'

jacoco {
    toolVersion = "$jacocoVersion"
    reportsDir = file("${project.buildDir}/reports/jacoco")
}

// Configured how the jacoco will create the code coverage. This customization will trigger the unit and integration tests
// that will generate a merge code coverage.
// TODO Must run the emulator first before starting this task
task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {
    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = [
            '**/R.class',
            '**/R$*.class',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            '**/*Test*.*',
            '**/*$[0-9].*',
            'android/**/*.*'
    ]
    def debugTree = fileTree(dir: "$project.buildDir/tmp/kotlin-classes/debug", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/kotlin"
    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = files(
            "${project.buildDir}/jacoco/testDebugUnitTest.exec",
            "${project.buildDir}/outputs/code-coverage/connected/*.ec"
    )
}