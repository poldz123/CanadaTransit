apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolVersion
    defaultConfig {
        applicationId rootProject.ext.applicationId
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    sourceSets {
        String mainKotlinDir = "src/main/kotlin"
        String sharedTestKotlinDir = "src/shared/kotlin"
        String sharedResourceKotlinDir = "src/shared/res"
        String unitTestKotlinDir = "src/test/kotlin"
        String androidTestKotlinDir = "src/androidTest/kotlin"

        main {
            java.srcDir mainKotlinDir
        }
        test {
            java.srcDir unitTestKotlinDir
            java.srcDir sharedTestKotlinDir
            resources.srcDir sharedResourceKotlinDir
        }
        androidTest {
            java.srcDir androidTestKotlinDir
            java.srcDir sharedTestKotlinDir
            resources.srcDir sharedResourceKotlinDir
        }
    }
    packagingOptions {
        exclude 'META-INF/LICENSE'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

// Makes sure that kotlin test will not be used in production code
afterEvaluate {
    android.sourceSets.all { sourceSet ->
        if (!sourceSet.name.startsWith("test") || !sourceSet.name.startsWith("androidTest")) {
            sourceSet.kotlin.setSrcDirs([])
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Community Library
    implementation "com.jakewharton.timber:timber:$timberLibraryVersion"
    implementation "com.squareup.retrofit2:retrofit:$retrofitLibraryVersion"
    implementation "io.reactivex.rxjava2:rxkotlin:$rxKotlinLibraryVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidLibraryVersion"
    implementation "io.reactivex.rxjava2:rxjava:$rxJavaLibraryVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rxJavaRetrofitAdapterLibraryVersion"
    implementation "com.google.code.gson:gson:$gsonLibraryVersion"
    implementation "com.squareup.retrofit2:converter-gson:$gsonRetrofitConverterLibraryVersion"
    implementation "net.danlew:android.joda:$jodaTimeAndroidLibraryVersion"

    // Google Library
    implementation "com.android.support:design:$googleSupportLibraryVersion"
    implementation "com.android.support:appcompat-v7:$googleSupportLibraryVersion"
    implementation "com.android.support.constraint:constraint-layout:$googleContraintLayoutLibraryVersion"
    implementation "com.google.android.gms:play-services-maps:$googlePlayServiceLibraryVersion"
    implementation "android.arch.persistence.room:runtime:$googleRoomLibraryVersion"
    implementation "android.arch.persistence.room:rxjava2:$googleRoomLibraryVersion"
    kapt "android.arch.persistence.room:compiler:$googleRoomLibraryVersion"

    // Test Library
    androidTestImplementation "com.google.code.findbugs:jsr305:$jsr305LibraryVersion"
    androidTestImplementation("com.android.support.test.espresso:espresso-core:$espressoLibraryVersion", {
        exclude group: "com.android.support", module: "support-annotations"
    })
    testImplementation "junit:junit:$junitLibraryVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"
    testImplementation "joda-time:joda-time:$jodaTimeAndroidLibraryVersion"
    testImplementation "org.mockito:mockito-core:$mockitoLibraryVersion"

    // Shared Test Library
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttpLibraryVersion"
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:$okhttpLibraryVersion"
    testImplementation "org.robolectric:robolectric:$robolectricLibraryVersion"
    androidTestImplementation "org.robolectric:robolectric:$robolectricLibraryVersion"

    // Compile time plugin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
}

repositories {
    mavenCentral()
}
